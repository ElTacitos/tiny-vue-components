{"version":3,"file":"index.js","sources":["../src/components/Toggle.vue?vue&type=template&id=8da0d0f8&lang.js"],"sourcesContent":["<template>\r\n  <svg :style=\"style\" viewBox=\"0 0 190 100\" @click=\"onClick\">\r\n    <rect :fill=\"color\" x=\"0\" width=\"190\" height=\"100\" rx=\"50\" />\r\n    <rect\r\n        :fill=\"handleColor\"\r\n        :x=\"currentX\"\r\n        y=\"5\"\r\n        width=\"90\"\r\n        height=\"90\"\r\n        rx=\"50\"\r\n    />\r\n  </svg>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import {computed, PropType} from \"vue\";\r\n  import {IColor, IStyle} from \"../interfaces\";\r\n\r\n  export default ({\r\n    emits: ['change', 'update:value'],\r\n    name: \"Toggle\",\r\n    props: {\r\n      color: {\r\n        default: \"#666666\",\r\n        type: Object as PropType<IColor>| String,\r\n      },\r\n      handleColor: {\r\n        default: \"#ffffff\",\r\n        type: Object as PropType<IColor>| String,\r\n      },\r\n      width: {\r\n        default: \"auto\",\r\n        type: String,\r\n      },\r\n      value: {\r\n        default: false,\r\n        type: Boolean,\r\n      }\r\n    },\r\n    setup(props, context) {\r\n      const OFF_X = 5;\r\n      const ON_X = 95;\r\n\r\n      function onClick(): void {\r\n        context.emit('update:value', !props.value)\r\n        context.emit('change', !props.value)\r\n        console.log(\"click\", props.value)\r\n      }\r\n\r\n      const color = computed((): string => {\r\n        if (typeof props.color === \"string\") {\r\n          return props.color;\r\n        }\r\n\r\n        return props.value ? props.color.on : props.color.off;\r\n      })\r\n\r\n      const currentX = computed((): number => {\r\n        return props.value ? ON_X : OFF_X;\r\n      })\r\n\r\n      const handleColor = computed((): string => {\r\n        if (typeof props.handleColor === \"string\") {\r\n          return props.handleColor;\r\n        }\r\n\r\n        return props.value ? props.handleColor.on : props.handleColor.off;\r\n      })\r\n\r\n      const style = computed((): IStyle => {\r\n        return { width: props.width };\r\n      })\r\n\r\n      return {color, currentX, handleColor, onClick, style};\r\n    }\r\n  })\r\n</script>\r\n"],"names":["_createElementBlock","_createElementVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BACEA;IAAM,KAAK,qBAAE,YAAK;IAAE,OAAO,EAAC;IAAe,OAAK,0CAAE,yCAAO;;IACvDC;MAAO,IAAI,EAAE,YAAK;MAAE,CAAC,EAAC;MAAI,KAAK,EAAC;MAAM,MAAM,EAAC;MAAM,EAAE,EAAC;;IACtDA;MACK,IAAI,EAAE,kBAAW;MACjB,CAAC,EAAE,eAAQ;MACZ,CAAC,EAAC;MACF,KAAK,EAAC;MACN,MAAM,EAAC;MACP,EAAE,EAAC;;;;;;;;;;;;;;;;;;;"}